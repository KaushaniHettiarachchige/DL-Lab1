task 1

1. 
exp_array = np.random.exponential(scale=1.0, size=(4, 4))
print(exp_array)

output:
[[0.70370601 1.21837337 4.50417178 0.81236709]
 [0.71922018 0.83699674 0.6628762  1.28349104]
 [1.84589667 0.07961986 0.32621386 0.21107798]
 [0.30792719 0.66244636 0.47336849 2.85460372]]

2.
exp_data = np.random.exponential(scale=1.0, size=100000)
uniform_data = np.random.rand(100000)
normal_data = np.random.normal(size=100000)

plt.figure(figsize=(10,6))
plt.hist(exp_data, density=True, bins=100, histtype="step", color="red", label="Exponential")
plt.hist(uniform_data, density=True, bins=100, histtype="step", color="blue", label="Uniform")
plt.hist(normal_data, density=True, bins=100, histtype="step", color="green", label="Normal")
plt.axis([-2.5, 8, 0, 1.1])
plt.legend(loc="upper right")
plt.title("Random Distributions")
plt.xlabel("Value")
plt.ylabel("Density")
plt.grid()
plt.show()

3.
from mpl_toolkits.mplot3d import Axes3D

x = np.linspace(-5, 5, 100)
y = np.linspace(-5, 5, 100)
X, Y = np.meshgrid(x, y)
Z = X**2 + Y**2

fig = plt.figure(figsize=(8,6))
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(X, Y, Z, cmap="viridis")
ax.set_title("Z = X^2 + Y^2")
ax.set_xlabel("X")
ax.set_ylabel("Y")
ax.set_zlabel("z")
plt.show()

4.
